{
  "plugin_type": "extractors",
  "name": "tap-beautifulsoup",
  "namespace": "tap_beautifulsoup",
  "variant": "meltanolabs",
  "label": "BeautifulSoup",
  "docs": "https://hub.meltano.com/extractors/tap-beautifulsoup--meltanolabs",
  "repo": "https://github.com/MeltanoLabs/tap-beautifulsoup",
  "pip_url": "git+https://github.com/MeltanoLabs/tap-beautifulsoup.git",
  "executable": "tap-beautifulsoup",
  "description": "Python library for pulling data out of HTML and XML files.",
  "logo_url": "https://hub.meltano.com/assets/logos/extractors/beautifulsoup.png",
  "capabilities": [
    "about",
    "catalog",
    "discover",
    "schema-flattening",
    "state",
    "stream-maps"
  ],
  "settings_group_validation": [
    [
      "output_folder",
      "parser",
      "site_url",
      "source_name"
    ]
  ],
  "settings": [
    {
      "name": "download_recursively",
      "kind": "boolean",
      "value": true,
      "label": "Download Recursively",
      "description": "Attempt to download all pages recursively into the output directory prior to parsing files. Set this to False if you've previously run `wget -r -A. Html https://sdk.meltano.com/en/latest/`"
    },
    {
      "name": "find_all_kwargs",
      "kind": "object",
      "label": "Find All Kwargs",
      "description": "This dict contains all the kwargs that should be passed to the [`find_all`](https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find-all) call in order to extract text from the pages."
    },
    {
      "name": "flattening_enabled",
      "kind": "boolean",
      "label": "Flattening Enabled",
      "description": "'True' to enable schema flattening and automatically expand nested properties."
    },
    {
      "name": "flattening_max_depth",
      "kind": "integer",
      "label": "Flattening Max Depth",
      "description": "The max depth to flatten schemas."
    },
    {
      "name": "output_folder",
      "kind": "string",
      "value": "output",
      "label": "Output Folder",
      "description": "The file path of where to write the intermediate downloaded HTML files to."
    },
    {
      "name": "parser",
      "kind": "options",
      "value": "html.parser",
      "label": "Parser",
      "description": "The BeautifulSoup parser to use.",
      "options": [
        {
          "label": "Html Parser",
          "value": "html.parser"
        }
      ]
    },
    {
      "name": "site_url",
      "kind": "string",
      "label": "Site URL",
      "description": "The site you'd like to scrape. The tap will download all pages recursively into the output directory prior to parsing files."
    },
    {
      "name": "source_name",
      "kind": "string",
      "label": "Source Name",
      "description": "The name of the source you're scraping. This will be used as the stream name."
    },
    {
      "name": "stream_map_config",
      "kind": "object",
      "label": "Stream Map Config",
      "description": "User-defined config values to be used within map expressions."
    },
    {
      "name": "stream_maps",
      "kind": "object",
      "label": "Stream Maps",
      "description": "Config object for stream maps capability. For more information check out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html)."
    }
  ]
}