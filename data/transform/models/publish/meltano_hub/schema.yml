version: 2

models:
  - name: fact_hub_metrics
    description: This table includes metrics that are published to S3 and are consumed by MeltanoHub for displaying plugin usage metrics.
    columns:
      - name: repo_full_name
        description: The full name of the GitHub repo including namespace.
        tests:
          - not_null

      - name: created_at_timestamp
        description: The timestamp of when the repo was created.
        tests:
          - not_null

      - name: last_push_timestamp
        description: The timestamp of when the repo last had a commit pushed.
        tests:
          - not_null

      - name: last_updated_timestamp
        description: The timestamp of when the repo was last updated which includes commits pushed but also other repo updates like a wiki change, etc.
        tests:
          - not_null

      - name: num_forks
        description: The count of the number of forks off the repository.
        tests:
          - not_null

      - name: num_open_issues
        description: The count of the number of open issues.
        tests:
          - not_null

      - name: num_stargazers
        description: The count of the number of repo stargazers.
        tests:
          - not_null

      - name: num_watchers
        description: The count of the number of repo watchers.
        tests:
          - not_null

      - name: meltano_exec_count_3m
        description: The sum of execution events via meltano elt or meltano invoke that used the plugin matching this repo name in the last 3 months. The join does not include namespace so all forks share the same value.
        tests:
          - not_null
          
      - name: meltano_project_id_count_3m
        description: The distinct count of project IDs that sent at least one execution event via meltano elt or meltano invoke that used the plugin matching this repo name in the last 3 months. The join does not include namespace so all forks share the same value.
        tests:
          - not_null

  - name: hub_metrics_audit
    description: This table includes audit details to be used in determining how fresh the fact_hub_metrics are.
    columns:
      - name: updated_date
        description: The timestamp of when the metric type was updated.
        tests:
          - not_null

      - name: metric_type
        description: The metric type (i.e. meltano_metrics, github_metrics)
        tests:
          - not_null

  - name: hub_bot_plugins
    description: The details of plugins that need to be added to MeltanoHub. The criteria for filtering what plugins need to be included can be found in the where clause
      but the basics are that its not already listed, is public, is older than 7 days, has updates in the last year, isnt a fork (for now), etc.
    columns:
      - name: repo_url
        description: The GitHub repository of the plugin.
        tests:
          - not_null
          - unique

  - name: fact_variant_hub_metrics
    description: This table includes metrics that are published to S3 and are consumed by MeltanoHub for displaying plugin usage metrics.
      This replaces fact_hub_metrics since it has more fine grain detail at the variant level.
    columns:
      - name: name
        description: The plugin name.

      - name: variant
        description: The plugin variant name.

      - name: repo
        description: The plugin repo.

      - name: plugin_type
        description: The plugin type.

      - name: pip_url
        description: The pip url for the plugin.

      - name: is_default
        description: A boolean whether the plugins is the hub default or not.

      - name: all_projects_by_name
        description: The sum of all distinct projects based on the plugin name. This includes both >2.0 telemetry with variant level data
          and legacy structured events without variant data. It should act as a top level quantity of how many projects use the plugin
          no matter what variant.

      - name: success_projects_by_name
        description: Similar to `all_projects_by_name` but only where projects had a successful execution.

      - name: all_projects_unstruct_by_name
        description: The sum of all distinct projects based on the plugin name, restricted to events >2.0 with variant level data.
          It should act as a top level quantity for variant metrics of how many projects use the plugin no matter what variant.

      - name: success_projects_unstruct_by_name
        description: Similar to `all_projects_unstruct_by_name` but only where projects had a successful execution.

      - name: all_projects_unstruct_by_variant
        description: The sum of all distinct projects based on the plugin variant, restricted to events >2.0 with variant level data.
          Projects can use multiple variants so summing all variants shouldn't equal `all_projects_unstruct_by_name`.

      - name: success_projects_unstruct_by_variant
        description: Similar to `all_projects_unstruct_by_variant` but only where projects had a successful execution.

      - name: all_execs_by_name
        description: The sum of all executions based on the plugin name. This includes both >2.0 telemetry with variant level data
          and legacy structured events without variant data. It should act as a top level quantity of how many executions were performed
          with this plugin no matter what variant.

      - name: success_execs_by_name
        description: Similar to `all_execs_by_name` but only where projects had a successful execution.

      - name: all_execs_unstruct_by_name
        description: The sum of all executions based on the plugin name, restricted to events >2.0 with variant level data.
          It should act as a top level quantity for variant metrics of how many executions were performed with this plugin no matter what variant.

      - name: success_execs_unstruct_by_name
        description: Similar to `all_execs_unstruct_by_name` but only where projects had a successful execution.

      - name: all_execs_unstruct_by_variant
        description: The sum of all executions based on the plugin variant, restricted to events >2.0 with variant level data.
          Projects can use multiple variants so summing all variants shouldn't equal `all_execs_unstruct_by_name`.

      - name: success_execs_unstruct_by_variant
        description: Similar to `all_execs_unstruct_by_variant` but only where projects had a successful execution.

      - name: all_projects
        description: A renamed duplicate of `all_projects_unstruct_by_variant`.

      - name: all_execs
        description: A renamed duplicate of `all_execs_unstruct_by_variant`.
