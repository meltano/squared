# Originally created from a copy of `prod` environment (`prod.meltano.yml`)
environments:
- name: staging
  config:
    plugins:
      extractors:
      - name: tap-slack-public
        config:
          thread_lookback_days: 7
      - name: tap-google-analytics
        config:
          start_date: '2022-02-20'
      - name: tap-gitlab
        config:
          start_date: '2020-01-01T00:00:00Z'
      - name: tap-github
        config:
          start_date: '2020-01-01'
      - name: tap-snowflake
        config:
          database: STAGING_PROD
          user: STAGING
          role: STAGING
          warehouse: STAGING
      - name: tap-snowflake-metrics-legacy
        config:
          schema: MELTANO_HUB
          tables:
          - FACT_HUB_METRICS
      - name: tap-snowflake-metrics
        config:
          schema: MELTANO_HUB
          tables:
          - FACT_VARIANT_HUB_METRICS
      - name: tap-snowflake-audit
        config:
          schema: MELTANO_HUB
          tables:
          - HUB_METRICS_AUDIT
      - name: tap-snowflake-singer-activity
        config:
          schema: SLACK_NOTIFICATIONS
          tables:
          - SINGER_ACTIVITY_NOTIFICATIONS
          
      - name: tap-snowflake-meltano-activity
        config:
          schema: SLACK_NOTIFICATIONS
          tables:
          - MELTANO_ACTIVITY_NOTIFICATIONS
      loaders:
      - name: target-snowflake
        config:
          dbname: STAGING_RAW
          user: STAGING
          role: STAGING
          warehouse: STAGING
          default_target_schema: ${MELTANO_EXTRACT__LOAD_SCHEMA}
      - name: target-apprise-singer-activity
        config:
          stream_maps:
            STAGING_PROD-SLACK_NOTIFICATIONS-SINGER_ACTIVITY_NOTIFICATIONS:
              title: TITLE
              body: BODY
      - name: target-apprise-meltano-activity
        config:
          stream_maps:
            STAGING_PROD-SLACK_NOTIFICATIONS-MELTANO_ACTIVITY_NOTIFICATIONS:
              title: TITLE
              body: BODY
      utilities:
      - name: dbt-snowflake
        config:
          user: STAGING
          role: STAGING
          warehouse: STAGING
          database: STAGING_PROD
          database_prep: STAGING_PREP
          database_raw: STAGING_RAW
      - name: sqlfluff
        config:
          user: STAGING
      - name: great_expectations
        config:
          prod_database: STAGING_PROD
          raw_database: STAGING_RAW
          username: STAGING
          role: STAGING
          warehouse: STAGING
