version: 1
send_anonymous_usage_stats: true
project_id: c15e971a-d318-4a9d-979b-1039ce5fd1b1
include_paths:
  - ./*.meltano.yml
plugins:
  extractors:
  - name: tap-slack
    namespace: tap_slack
    pip_url: git+https://github.com/MeltanoLabs/tap-slack.git@f0205cd4016d6cd4f46cf11841aaffe13fb2cc8d
    executable: tap-slack
    capabilities:
    - catalog
    - state
    - discover
    - about
    - stream-maps
    settings:
    - name: api_key
      kind: password
    config:
      start_date: '2021-01-01'
      auto_join_channels: false
      selected_channels:
      - C01SK13R9NJ
      channel_types:
      - private_channel
      stream_maps:
        users:
          __alias__: "slack_users"
        channels:
          __alias__: "slack_channels"
        messages:
          __alias__: "slack_messages"
    select:
    - users.*
    - channels.*
    - messages.*
  - name: tap-google-analytics
    namespace: tap_google_analytics
    pip_url: git+https://github.com/MeltanoLabs/tap-google-analytics.git
    executable: tap-google-analytics
    capabilities:
    - catalog
    - discover
    - state
    settings:
    - name: start_date
      kind: date_iso8601
    - name: client_secrets
      kind: object
    config:
      view_id: '188392047' # CLI
      # view_id: '188274549' # Meltano Website
      # view_id: '188384771' # Meltano UI
      # view_id: '210710793' # Newsletter
      reports: ./extract/ga_reports/cli_events_report_definition.json
  - name: tap-athena
    namespace: tap_athena
    pip_url: git+https://github.com/pnadolny13/tap-athena.git@hard_fork_sdk_db_stream_stuff
    executable: tap-athena
    capabilities:
    - catalog
    - discover
    - state
    settings:
    - name: aws_access_key_id
      kind: password
    - name: aws_secret_access_key
      kind: password
    - name: s3_bucket
      kind: string
    - name: athena_database
      kind: string
    - name: s3_staging_dir
      kind: string
    - name: schema_name
      kind: string
    config:
      aws_region: us-east-2
      aws_access_key_id: ${AWS_ACCESS_KEY_ID}
      aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
  - name: tap-athena-metrics
    inherit_from: tap-athena
    select:
    - '*fact_hub_metrics.repo_full_name'
    - '*fact_hub_metrics.created_at_timestamp'
    - '*fact_hub_metrics.last_push_timestamp'
    - '*fact_hub_metrics.last_updated_timestamp'
    - '*fact_hub_metrics.num_forks'
    - '*fact_hub_metrics.num_open_issues'
    - '*fact_hub_metrics.num_stargazers'
    - '*fact_hub_metrics.num_watchers'
    - '*fact_hub_metrics.meltano_exec_count_3m'
    - '*fact_hub_metrics.meltano_project_id_count_3m'
  - name: tap-athena-audit
    inherit_from: tap-athena
    select:
    - '*hub_metrics_audit.updated_date'
    - '*hub_metrics_audit.metric_type'
  - name: tap-gitlab
    variant: meltanolabs
    pip_url: git+https://github.com/pnadolny13/tap-gitlab.git@author_usernames
    select:
    - projects.*
    - merge_requests.*
    - issues.*
  - name: tap-github
    namespace: tap_github
    pip_url: git+https://github.com/MeltanoLabs/tap-github@d99378778c0cebc446c12b552ee4fd386fdc2610
    capabilities:
    - catalog
    - discover
    - state
    settings:
    - name: auth_token
      kind: password
  - name: tap-github-labs
    inherit_from: tap-github
    config:
      organizations:
      - MeltanoLabs
      stream_maps:
        repositories:
          __alias__: "github_repositories"
        pull_requests:
          __alias__: "github_pull_requests"
        issues:
          __alias__: "github_issues"
          __filter__: record['type'] = 'issue'
    select:
    - repositories.*
    - pull_requests.*
    - issues.*
  - name: tap-github-search
    inherit_from: tap-github
    config:
      start_date: '2022-02-13'
      searches:
      - name: tap forks
        query: tap- fork:only language:Python singer in:readme
      - name: tap non-forks
        query: tap- fork:false language:Python singer in:readme
      - name: targets forks
        query: target- fork:only language:Python singer in:readme
      - name: target non-forks
        query: target- fork:false language:Python singer in:readme
      metrics_log_level: DEBUG
      stream_maps:
        repositories:
          __filter__: >
            ('tap-' in name or 'target-' in full_name)
            and name != 'singer-tap-template'
            and name != 'singer-target-template'
    select:
    - repositories.*
    - issues.*
    - issue_comments.*
    - '!*.comments'
    - '!*.body'
    - '!*.reactions'  # Broken JSON Schema validator for issues
  - name: tap-snowflake
    namespace: tap_snowflake
    pip_url: git+https://github.com/pnadolny13/pipelinewise-tap-snowflake.git@add_role_support
    executable: tap-snowflake
    capabilities:
    - properties
    - discover
    - state
    settings:
    - name: account
    - name: dbname
    - name: user
    - name: password
      kind: password
    - name: warehouse
    - name: tables
    - name: role
    config:
      account: epa06486
      password: ${SNOWFLAKE_PASSWORD}
  - name: tap-snowflake-metrics
    inherit_from: tap-snowflake
    metadata:
      '*':
        replication-method: FULL_TABLE
    select:
      - '*FACT_HUB_METRICS.REPO_FULL_NAME'
      - '*FACT_HUB_METRICS.CREATED_AT_TIMESTAMP'
      - '*FACT_HUB_METRICS.LAST_PUSH_TIMESTAMP'
      - '*FACT_HUB_METRICS.LAST_UPDATED_TIMESTAMP'
      - '*FACT_HUB_METRICS.NUM_FORKS'
      - '*FACT_HUB_METRICS.NUM_OPEN_ISSUES'
      - '*FACT_HUB_METRICS.NUM_STARGAZERS'
      - '*FACT_HUB_METRICS.NUM_WATCHERS'
      - '*FACT_HUB_METRICS.MELTANO_EXEC_COUNT_3M'
      - '*FACT_HUB_METRICS.MELTANO_PROJECT_ID_COUNT_3M'
  - name: tap-snowflake-audit
    inherit_from: tap-snowflake
    metadata:
      '*':
        replication-method: FULL_TABLE
    select:
    - '*HUB_METRICS_AUDIT.UPDATED_DATE'
    - '*HUB_METRICS_AUDIT.METRIC_TYPE'
  loaders:
  - name: target-athena
    namespace: target_athena
    pip_url: git+https://github.com/MeltanoLabs/target-athena.git@bump-sdk-to-0_4x
    settings:
    - name: aws_access_key_id
      kind: password
    - name: aws_secret_access_key
      kind: password
    - name: s3_bucket
      kind: string
    - name: athena_database
      kind: string
    - name: s3_staging_dir
      kind: string
    - name: work_group
      kind: string
    - name: add_record_metadata
      kind: boolean
    - name: flatten_records
      kind: boolean
    - name: object_format
      kind: string
    config:
      aws_region: us-east-2
      aws_access_key_id: ${AWS_ACCESS_KEY_ID}
      aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
      object_format: jsonl
      temp_dir: .output
      add_record_metadata: true
      flatten_records: true
  - name: target-athena-slack
    inherit_from: target-athena
    config:
      flatten_records: false
  - name: target-athena-gitlab
    inherit_from: target-athena
    config:
      stream_maps:
        projects:
          __alias__: "gitlab_projects"
        merge_requests:
          __alias__: "gitlab_merge_requests"
        issues:
          __alias__: "gitlab_issues"
  - name: target-athena-github
    inherit_from: target-athena
    config:
      flatten_records: false
  - name: target-yaml
    namespace: target_yaml
    pip_url: git+https://github.com/MeltanoLabs/target-yaml.git
    executable: target-yaml
    settings:
    - name: file_naming_scheme
      kind: string
    - name: timestamp_tz_offset
      kind: string
    - name: overwrite_behavior
      kind: string
    - name: record_insert_jsonpath
      kind: string
    - name: stream_maps
      kind: object
    config:
      file_naming_scheme: '{stream_name}.yml'
      timestamp_tz_offset: 0
      overwrite_behavior: replace_records

  - name: target-yaml-metrics
    inherit_from: target-yaml
    config:
      file_naming_scheme: metrics.yml
      overwrite_behavior: replace_file
      record_insert_jsonpath: $.metrics
      record_key_property_name: REPO_FULL_NAME
      record_sort_property_name: REPO_FULL_NAME
      default_yaml_template: |
        # This file is auto-generated by running `meltano elt tap-athena-metrics target-yaml-metrics`
        metrics: {}
  - name: target-yaml-audit
    inherit_from: target-yaml
    config:
      file_naming_scheme: audit.yml
      overwrite_behavior: replace_file
      record_insert_jsonpath: "$.audit_log"
      record_key_property_name: METRIC_TYPE
      default_yaml_template: |
        # This file is auto-generated by running `meltano elt tap-athena-audit target-yaml-audit`
        audit_log: {}
  - name: target-snowflake
    variant: transferwise
    pip_url: pipelinewise-target-snowflake
    config:
      account: epa06486
      file_format: CSV
      add_metadata_columns: true
      password: ${SNOWFLAKE_PASSWORD}
  - name: target-snowflake-github-search
    inherit_from: target-snowflake
    config:
      default_target_schema: GITHUB_SEARCH
  - name: target-snowflake-google-analytics
    inherit_from: target-snowflake
    config:
      default_target_schema: GOOGLE_ANALYTICS
  transformers:
  - name: dbt
    pip_url: 'git+https://github.com/Tomme/dbt-athena.git@5991fc4267fd50a0de34152cb7789f4bb67bad70 dbt-core~=1.0.0 dbt-snowflake~=1.0.0'
    config:
      target: snowflake
      models: squared
      sf_password: ${SNOWFLAKE_PASSWORD}
      sf_account: epa06486
      sf_user: foo
      sf_role: foo
      sf_database_raw: foo
      sf_database_prep: foo
      sf_database_prod: foo
      sf_warehouse: foo
  files:
  - name: dbt
    pip_url: git+https://gitlab.com/meltano/files-dbt.git@config-version-2
  utilities:
  - name: sqlfluff
    namespace: sqlfluff
    pip_url: sqlfluff[dbt]==0.9.4; sqlfluff-templater-dbt==0.9.4; git+https://github.com/Tomme/dbt-athena.git@5991fc4267fd50a0de34152cb7789f4bb67bad70
    executable: sqlfluff
    config:
      athena_catalog: 'test'
      dbt_source_schema: 'abc'
      target: athena
      target_schema: target
      source_schema: source
      s3_stage: s3://test/foo
      sf_database: foo
  - name: awscli
    namespace: awscli
    pip_url: awscli==1.21.7
    executable: aws
  - name: superset
    namespace: superset
    commands:
      up:
        executable: /usr/local/bin/docker
        args: compose -f analyze/superset/docker-compose.yml up -d
      down:
        executable: /usr/local/bin/docker
        args: compose -f analyze/superset/docker-compose.yml down -v
      export:
        executable: python
        args: analyze/superset/export.py
      import:
        executable: python
        args: analyze/superset/import.py
  - name: great_expectations
    namespace: great_expectations
    pip_url: great_expectations; sqlalchemy; PyAthenaJDBC>1.0.9; PyAthena>1.2.0
    executable: great_expectations
    settings:
      - name: ge_home
        value: $MELTANO_PROJECT_ROOT/utilities/great_expectations
        env: GE_HOME
    commands:
       test_ga_raw: checkpoint run google_analytics_raw
       test_dbt_hub_metrics: checkpoint run dbt_hub_metrics
  - name: permifrost
    namespace: permifrost
    pip_url: permifrost
    executable: permifrost
    commands:
      run: run utilities/permifrost/roles.yml
      spec-test: spec-test utilities/permifrost/roles.yml
  orchestrators:
  - name: airflow
    pip_url: apache-airflow==2.1.2 --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.1.2/constraints-${MELTANO__PYTHON_VERSION}.txt
environments: []
