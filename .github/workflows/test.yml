name: Test Meltano Pipelines

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  # airflow_sqlfluff_tests:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: data/
  #   environment: test
  #   env:
  #     MELTANO_ENVIRONMENT: cicd
  #     MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
  #     MELTANO_ENV_FILE: ${{ secrets.MELTANO_ENV_FILE }}
  #     CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.8'
  #       cache: 'pip'
  #   - run: pip install -r requirements.txt
  #   - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
  #   - run: echo $MELTANO_ENV_FILE > .env
  #   # Airflow
  #   - run: meltano install orchestrator airflow
  #   - run: meltano test airflow
  #   # SqlFluff
  #   - run: meltano install utilities sqlfluff
  #   - run: meltano install transformer dbt-snowflake
  #   - run: meltano invoke dbt-snowflake:deps
  #   - run: meltano invoke sqlfluff lint -v

  el_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: data/
    environment: test
    strategy:
      matrix:
        extract-source: ['slack']
        # , 'google_analytics', 'gitlab', 'github_labs', 'github_search']
    env:
      MELTANO_ENVIRONMENT: cicd
      MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
      MELTANO_ENV_FILE: ${{ secrets.MELTANO_ENV_FILE }}
      CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
      TAP_GOOGLE_ANALYTICS_CLIENT_SECRETS: ${{ secrets.TAP_GOOGLE_ANALYTICS_CLIENT_SECRETS }}
      TAP_GITLAB_PRIVATE_TOKEN: ${{ secrets.TAP_GITLAB_PRIVATE_TOKEN }}
      TAP_SLACK_API_KEY: ${{ secrets.TAP_SLACK_API_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TAP_GITHUB_AUTH_TOKEN: ${{ secrets.TAP_GITHUB_AUTH_TOKEN }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
    - run: echo "${{secrets.MELTANO_ENV_FILE }}" > .env 
    # - run: echo $MELTANO_ENV_FILE >> .env
    - run: tail -c40 .env
    - run: tail -c60 .env
    - run: head -c20 .env
    - run: head -c50 .env
    - run: head -c100 .env
    - run: echo "TARGET_SNOWFLAKE_DEFAULT_TARGET_SCHEMA=${{ env.CI_BRANCH }}_${{ matrix.extract-source }}" >> $GITHUB_ENV
    - run: make install_extractor EXTRACT_SOURCE=${{ matrix.extract-source }}
    - run: meltano --log-level=debug install loader target-snowflake
    # - run: make run_meltano EXTRACT_SOURCE=${{ matrix.extract-source }}
