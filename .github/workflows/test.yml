name: Test Meltano Pipelines

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  airflow_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: data/
    environment: test
    env:
      MELTANO_ENVIRONMENT: cicd
      MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
      CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
    - run: echo "${{secrets.MELTANO_ENV_FILE }}" > .env 
    # Airflow
    - run: meltano install orchestrator airflow
    - run: meltano test airflow

  sqlfluff_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: data/
    environment: test
    env:
      MELTANO_ENVIRONMENT: cicd
      MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
      CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
    - run: echo "${{secrets.MELTANO_ENV_FILE }}" > .env 
    # Run Test
    - run: meltano install utilities sqlfluff
    - run: meltano install transformer dbt-snowflake
    - run: meltano invoke dbt-snowflake:deps
    - run: meltano invoke sqlfluff lint -v

  el_tests:
    runs-on: ubuntu-latest
    needs: [airflow_tests, sqlfluff_tests]
    defaults:
      run:
        working-directory: data/
    environment: test
    strategy:
      matrix:
        extract-source: ['slack', 'google_analytics', 'gitlab', 'github_labs', 'github_search']
    env:
      MELTANO_ENVIRONMENT: cicd
      MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
      CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
    - run: echo "${{secrets.MELTANO_ENV_FILE }}" > .env 
    - run: echo "TARGET_SNOWFLAKE_DEFAULT_TARGET_SCHEMA=${{ env.CI_BRANCH }}_${{ matrix.extract-source }}" >> $GITHUB_ENV
    # Run Test
    - run: make install_extractor EXTRACT_SOURCE=${{ matrix.extract-source }}
    - run: meltano install loader target-snowflake
    - run: make run_meltano EXTRACT_SOURCE=${{ matrix.extract-source }}

  transform_tests:
    runs-on: ubuntu-latest
    needs: [el_tests]
    defaults:
      run:
        working-directory: data/
    environment: test
    env:
      MELTANO_ENVIRONMENT: cicd
      MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
      CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
    - run: echo "${{secrets.MELTANO_ENV_FILE }}" > .env
    # Run Test
    - run: meltano install transformer dbt-snowflake
    - run: meltano invoke dbt-snowflake:deps
    - run: meltano invoke dbt-snowflake:compile
    - run: meltano invoke dbt-snowflake:seed
    - run: meltano invoke dbt-snowflake run
    - run: meltano invoke dbt-snowflake:test

  reverse_el_tests:
    runs-on: ubuntu-latest
    needs: [transform_tests]
    defaults:
      run:
        working-directory: data/
    environment: test
    env:
      MELTANO_ENVIRONMENT: cicd
      MELTANO_SEND_ANONYMOUS_USAGE_STATS: 'false'
      CI_BRANCH: 'b${{ github.RUN_ID }}_${{ github.RUN_ATTEMPT }}'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - run: echo "DEFAULT_START_DATE=$(date +'%Y-%m-%d' -d '1 day ago')" >> $GITHUB_ENV
    - run: echo "${{secrets.MELTANO_ENV_FILE }}" > .env 
    # Run Test
    - run: meltano install extractor tap-snowflake-metrics
    - run: meltano install extractor tap-snowflake-audit
    - run: meltano install loader target-yaml-metrics
    - run: meltano install loader target-yaml-audit
    - run: meltano run tap-snowflake-metrics target-yaml-metrics
    - run: meltano run tap-snowflake-audit target-yaml-audit
